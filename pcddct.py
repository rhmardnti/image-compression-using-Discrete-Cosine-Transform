# -*- coding: utf-8 -*-
"""PCDDCT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-aENAIjQdhKnv_3Erce_NVcjKcUXKzH1

Kompresi Citra dengan Discrete Cosine Transform (DCT)


"""

# Pemanggilan library open cv, numpy, matplotlib 
import cv2
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

# Pemanggilan file dalam bentuk grayscale
img=cv2.imread('einstein.jpg',0)

# Display citra grayscale
f=plt.figure()
plt.imshow(img)

# Ekstrak file citra dalam bentuk float
img_float = img.astype('float')
img_float

# Proses transformasi file citra dengan teknik DCT dan menyimpan log dct
img_dct = cv2.dct(img_float)
img_dct_log = np.log(abs(img_dct))
img_dct_log

# Proses inverse DCT tahap 1
img_idct1 = cv2.idct(img_dct)
img_idct1

# Proses inverse DCT tahap 2 dengan frekuensi 100x100
recor_temp = img_dct[0:100,0:100]
recor_temp2 = np.zeros(img.shape)
recor_temp2[0:100,0:100] = recor_temp

img_idct2 = cv2.idct(recor_temp2)
img_idct2

# Display hasil transformasi
plt.subplot(221)
plt.imshow(img)
plt.title('original')
plt.subplot(222)
plt.imshow(img_dct_log)
plt.title('dct transformed')
plt.subplot(223)
plt.imshow(img_idct1)
plt.title('idct transformed')
plt.subplot(224)
plt.imshow(img_idct2)
plt.title('idct transformed')

# Penyimpanan file citra
cv2.imwrite('einstein.jpg', img)
cv2.imwrite('img_dct.jpg',img_dct)
cv2.imwrite('img_idct1.jpg', img_idct1)
cv2.imwrite('img_idct2.jpg', img_idct2)

# Informasi perbandingan ukuran dari file citra
import os
info=os.stat('einstein.jpg')
print("ukuran dari gambar original sebelum DCT adalah: ", info.st_size/1024,"KB")
info=os.stat('img_idct2.jpg')
print("ukuran dari gambar original setelah DCT adalah: ", info.st_size/1024,"KB")
